// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/loft-sh/agentapi/v4/pkg/apis/loft/cluster/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// SleepModeConfigLister helps list SleepModeConfigs.
// All objects returned here must be treated as read-only.
type SleepModeConfigLister interface {
	// List lists all SleepModeConfigs in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.SleepModeConfig, err error)
	// SleepModeConfigs returns an object that can list and get SleepModeConfigs.
	SleepModeConfigs(namespace string) SleepModeConfigNamespaceLister
	SleepModeConfigListerExpansion
}

// sleepModeConfigLister implements the SleepModeConfigLister interface.
type sleepModeConfigLister struct {
	indexer cache.Indexer
}

// NewSleepModeConfigLister returns a new SleepModeConfigLister.
func NewSleepModeConfigLister(indexer cache.Indexer) SleepModeConfigLister {
	return &sleepModeConfigLister{indexer: indexer}
}

// List lists all SleepModeConfigs in the indexer.
func (s *sleepModeConfigLister) List(selector labels.Selector) (ret []*v1.SleepModeConfig, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.SleepModeConfig))
	})
	return ret, err
}

// SleepModeConfigs returns an object that can list and get SleepModeConfigs.
func (s *sleepModeConfigLister) SleepModeConfigs(namespace string) SleepModeConfigNamespaceLister {
	return sleepModeConfigNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// SleepModeConfigNamespaceLister helps list and get SleepModeConfigs.
// All objects returned here must be treated as read-only.
type SleepModeConfigNamespaceLister interface {
	// List lists all SleepModeConfigs in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.SleepModeConfig, err error)
	// Get retrieves the SleepModeConfig from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1.SleepModeConfig, error)
	SleepModeConfigNamespaceListerExpansion
}

// sleepModeConfigNamespaceLister implements the SleepModeConfigNamespaceLister
// interface.
type sleepModeConfigNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all SleepModeConfigs in the indexer for a given namespace.
func (s sleepModeConfigNamespaceLister) List(selector labels.Selector) (ret []*v1.SleepModeConfig, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.SleepModeConfig))
	})
	return ret, err
}

// Get retrieves the SleepModeConfig from the indexer for a given namespace and name.
func (s sleepModeConfigNamespaceLister) Get(name string) (*v1.SleepModeConfig, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("sleepmodeconfig"), name)
	}
	return obj.(*v1.SleepModeConfig), nil
}
