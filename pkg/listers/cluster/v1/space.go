// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/loft-sh/agentapi/v4/pkg/apis/loft/cluster/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// SpaceLister helps list Spaces.
// All objects returned here must be treated as read-only.
type SpaceLister interface {
	// List lists all Spaces in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.Space, err error)
	// Get retrieves the Space from the index for a given name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1.Space, error)
	SpaceListerExpansion
}

// spaceLister implements the SpaceLister interface.
type spaceLister struct {
	indexer cache.Indexer
}

// NewSpaceLister returns a new SpaceLister.
func NewSpaceLister(indexer cache.Indexer) SpaceLister {
	return &spaceLister{indexer: indexer}
}

// List lists all Spaces in the indexer.
func (s *spaceLister) List(selector labels.Selector) (ret []*v1.Space, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.Space))
	})
	return ret, err
}

// Get retrieves the Space from the index for a given name.
func (s *spaceLister) Get(name string) (*v1.Space, error) {
	obj, exists, err := s.indexer.GetByKey(name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("space"), name)
	}
	return obj.(*v1.Space), nil
}
